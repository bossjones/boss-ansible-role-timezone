---
# tasks file for ansible-timezone
- include_tasks: facts.yml

# tasks file for adriagalin.timezone
- name: install tzdata if it is necessary
  apt: name=tzdata state=present

- name: "Check current timezone"
  shell: cat /etc/timezone
  register: current_timezone
  changed_when: False

- name: "Set timezone"
  timezone:
    name: "{{ timezone }}"
  notify:
  - restart systemd-timesyncd
  - restart cron

- name: "Check current timezone"
  shell: cat /etc/timezone
  register: current_timezone
  changed_when: False

- name: "Check timedatectl ntp status"
  shell: /usr/bin/timedatectl status | grep "NTP synchronized"
  register: ntp_sync_status
  changed_when: False
  ignore_errors: yes

- debug: msg="Dump timedatectl ntp status - {{ ntp_sync_status.stdout }}"
  when: ntp_sync_status is defined

- name: Run timedatectl status
  command: /usr/bin/timedatectl status
  changed_when: False
  check_mode: no
  register: timedatectl_status_result

- name: 'Run timedatectl set-ntp NO AKA turn off systemd-timesyncd only if "NTP synchronized: yes" is set'
  command: /usr/bin/timedatectl set-ntp no
  changed_when: False
  check_mode: no
  ignore_errors: yes
  register: timedatectl_set_no_ntp_result
  notify:
  - restart systemd-timesyncd
  - restart cron
  # when: '"NTP synchronized: yes" in timedatectl_status_result.stdout'

- name: Run timedatectl status again
  command: /usr/bin/timedatectl status
  register: timedatectl_set_no_ntp_result
  changed_when: 'timedatectl_set_no_ntp_result.stdout is search("Network time on: no")'
  ignore_errors: yes
  notify:
  - restart systemd-timesyncd
  - restart cron

- name: Keep systemd-timesyncd on - but without ntp support enabled
  service: name=systemd-timesyncd state=started enabled=yes

# In ansible playbooks, handlers (such as to restart a service) normally happen at the end of a run. If you need ansible to run a handler between two tasks, there is "flush_handlers".
- name: flush handlers
  meta: flush_handlers

# - name: main | Setting Timezone
#   timezone:
#     name: "{{ timezone }}"
#   when: not timezone_update_hardware_clock

# - name: main | Setting Timezone And Hardware Clock
#   timezone:
#     name: "{{ timezone }}"
#     # hwclock: true
#   when: timezone_update_hardware_clock




###########################

# TODO: Add an ansible verify step here
# root@timezone-node1:~# timedatectl status
#       Local time: Sat 2018-12-29 15:42:20 EST
#   Universal time: Sat 2018-12-29 20:42:20 UTC
#         RTC time: Sat 2018-12-29 20:42:19
#        Time zone: America/New_York (EST, -0500)
#  Network time on: yes
# NTP synchronized: no
#  RTC in local TZ: no
# root@timezone-node1:~#


- debug: msg="{{ timezone }}"

# - name: "Verify that new timezone is in stdout of timedatectl timezone={{timezone}}"
#   shell: timedatectl status
#   register: timedatectl_logout
#   # failed_when: >
#   #   timezone not in timedatectl_logout.stdout and
#   #   'Network time on: no' in timedatectl_logout.stdout
#   run_once: True
#   ignore_errors: yes
